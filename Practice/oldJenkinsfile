
pipeline{
	agent any
	stages {
		stage('Checkout') {
			steps {
			// 소스코드 체크아웃 
			checkout scm
			} 
		}

		stage('Build') { 
			steps {
				script{
				 sh 'mkdir -p classes'
				 sh 'javac -encoding UTF-8 -d classes /Users/nimo/Desktop/jenkinsPractice/Practice/src/app/Book.java'
				}
			echo "Build finished!!! :D"
			// Java 파일들을 컴파일하여 생성된 클래스 파일을 classes 디렉토리에 저장 // window 일 경우 bat
			// sh 'javac -encoding UTF-8 -d classes /Users/nimo/Desktop/jenkinsPractice/Practice/src/app/Book.java'
			}
		}


		stage('Test1') { 
			steps {
				script{
				// JUnit 5 테스트 실행을 위한 classpath 설정

				def classpath = "java -jar /Users/nimo/Desktop/jenkinsPractice/Practice/.settings/junit-platform-console-standalone-1.7.1.jar"
			
				} 
			}
		}

		stage('Test2') { 
			steps {
				script{
					// JUnit 5 테스트 실행
				sh 'java -cp classes:/Users/nimo/Desktop/jenkinsPractice/Practice/.settings/junit-platform-console-standalone-1.7.1.jar org.junit.platform.console.ConsoleLauncher --scan-class-path > test_results.txt'
				sh 'cat test_results.txt'
				}
			}
		}

		
	}
	post {
		always{
			archiveArtifacts 'test_results.txt'
		// success {
		// echo 'Build and test succeeded'
		// } 
		}
		
	}

}
