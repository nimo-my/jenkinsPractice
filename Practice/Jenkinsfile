

pipeline{
	agent any

	stages {

		// stage('Git clone') {
        //     steps {
		// 		script{
		// 		// The below will clone your repo and will be checked out to master branch by default.
		// 		// git credentialsId: 'nimo-my', url: 'https://github.com/nimo-my/jenkinsPractice/Practice.git'
		// 		// Do a ls -lart to view all the files are cloned. It will be clonned. This is just for you to be sure about it.
		// 		sh "ls -lart ./*" 
		// 		// List all branches in your repo. 
		// 		sh "git branch -a"
		// 		// Checkout to a specific branch in your repo.
		// 		sh "git checkout mac_jenkins"
		// 		}
        //     }
        // }

		stage('Checkout') {
			steps {
			// 소스코드 체크아웃 
			checkout scm
			} 
		}

		stage('Build') { 
			steps {
				script{
					// mac code here
					sh 'mkdir -p classes'
					sh 'javac -encoding UTF-8 -d classes /Users/nimo/Desktop/jenkinsPractice/Practice/src/app/PerformanceTest.java'

					// windows code here
					echo "Build finished!!! :D"
				}

			}
			
		}
		

		stage('Test') { 
			steps {
				script{

				// mac code here
				// JUnit 5 테스트 실행을 위한 classpath 설정
				def classpath = "java -jar /Users/nimo/Desktop/jenkinsPractice/Practice/.settings/junit-platform-console-standalone-1.7.1.jar"
				sh 'java -cp classes:/Users/nimo/Desktop/jenkinsPractice/Practice/.settings/junit-platform-console-standalone-1.7.1.jar org.junit.platform.console.ConsoleLauncher --scan-class-path'
				sh 'pwd'
				
				} 
				dir ("Practice/src/app") {
					sh 'javac PerformanceTest.java'
					sh 'java PerformanceTest > junit_test_results.txt'
				}

				echo "Test01 finished!!! :D"

			}
		}

	}

	post {
		always{
			dir ("Practice/src/app") {
				archiveArtifacts 'junit_test_results.txt'
			}
			
		// success {
		// echo 'Build and test succeeded'
		// } 
		}
		
	}

}


